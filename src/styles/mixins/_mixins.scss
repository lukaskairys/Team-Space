@mixin respond-to($size, $dir) {
    @if ($size == retina) {
        // stylelint-disable media-feature-name-no-vendor-prefix
        @media only screen and (min-resolution: 2dppx),
            (-webkit-min-device-pixel-ratio: 2) {
            @content;
        }
    } @else if ($size and $dir) {
        @media screen and (#{$dir}-width: ($size + px)) {
            @content;
        }
    }
}
//text overflow trim
@mixin trim($numLines: null) {
    //95% support in caniuse.com/.
    @if $numLines != null {
        /* stylelint-disable */
        -webkit-box-orient: vertical;
        display: -webkit-box;
        /* stylelint-enable */
        -webkit-line-clamp: $numLines;
        overflow: hidden;
    } @else {
        display: block;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
}
// scrollbar
@mixin custom-scrollbar {
    /* The emerging W3C standard that is currently Firefox-only */
    scrollbar-color: $color-iron $color-white;

    /* Works on Chrome/Edge/Safari */
    &::-webkit-scrollbar {
        width: 2rem;
    }

    &::-webkit-scrollbar-track {
        background: none;
    }

    &::-webkit-scrollbar-thumb {
        background-color: $color-iron;
        border: 6px solid $color-white;
        border-radius: 20px;
    }
}

//setting height and width of a square

@mixin square-size($squareSize) {
    height: $squareSize;
    width: $squareSize;
}

/* ANIMATINOS
    to use animations:
    @include animation("animationName animationTime etc")
*/

@mixin keyframes($animation-name) {
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
    animation: #{$str};
}

// custom animations
@include keyframes(fadeIn) {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}
